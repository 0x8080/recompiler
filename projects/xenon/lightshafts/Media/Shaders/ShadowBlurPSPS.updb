<?xml version="1.0" encoding="utf-8"?>
<shader-pdb pdbHint="4e4a0000-8c7c22db-9d7c20da" version="21119">
 <files>
  <file id="0" path="C:\Program Files (x86)\Microsoft Xbox 360 SDK\Source\Samples\Media\Shaders\LightShafts_OverlayQuad.hlsl" time="01ccf361-58696b1f">//--------------------------------------------------------------------------------------
// LightShafts_OverlayQuad.hlsl
//
// Shaders for lightshafts overlay quads in the LightShafts sample
//
// Xbox Advanced Technology Group.
// Copyright (C) Microsoft Corporation. All rights reserved.
// ATI 3D Application Research Group. 
// Copyright (C) ATI Research, Inc. All rights reserved. 
//--------------------------------------------------------------------------------------


//--------------------------------------------------------------------------------------
// Pixel shader constants
//--------------------------------------------------------------------------------------
#define NUM_BLUR_TAPS 12
uniform float4 g_vFilterTaps[NUM_BLUR_TAPS] : register(c0);


//--------------------------------------------------------------------------------------
// Samplers
//--------------------------------------------------------------------------------------
sampler ShadowMapSampler  : register(s0);
sampler FogTextureSampler : register(s0);


//--------------------------------------------------------------------------------------
// Vertex structures
//--------------------------------------------------------------------------------------
struct VS_OVERLAY_OUTPUT
{
   float4 vPos      : POSITION;
   float2 vTexCoord : TEXCOORD0;
};


//--------------------------------------------------------------------------------------
// Name: OverlayMainVS()
// Desc: Vertex Shader
//--------------------------------------------------------------------------------------
VS_OVERLAY_OUTPUT OverlayMainVS( float4 vPosition : POSITION,
                                 float2 vTexCoord : TEXCOORD0 )
{
    VS_OVERLAY_OUTPUT Out; 
    Out.vPos      = vPosition;
    Out.vTexCoord = vTexCoord;
    return Out;
}


//--------------------------------------------------------------------------------------
// Name: ShadowBlurPS()
// Desc: Routine to blur a shadow. The shadow is blurred more towards the top of the
//       texture.
//--------------------------------------------------------------------------------------
float4 ShadowBlurPS( float2 vTexCoord : TEXCOORD0 ) : COLOR
{
    float fColorSum = 0.0f;
    float fScale    = 0.02f * (1.0f-vTexCoord.y);

    // Run through all taps in the Poisson Disc
    for( int i = 0; i &lt; NUM_BLUR_TAPS; i++ )
    {
        // Compute tap coordinates
        float2 vTapCoord = vTexCoord + g_vFilterTaps[i] * fScale;

        // Accumulate color contribution
        if( tex2D( ShadowMapSampler, vTapCoord ).r &lt; 1.0f )
            fColorSum += 1.0f;
    }

    // Divide down and invert the accumulated color
    float fFinalColor = 1.0f - (fColorSum / NUM_BLUR_TAPS);

    return fFinalColor;
}


//--------------------------------------------------------------------------------------
// Name: CompositeFilteredFogPS()
// Desc: Routine to combine four channels of fog buffer into one and apply Poisson filter
//--------------------------------------------------------------------------------------
float4 CompositeFilteredFogPS( float2 vTexCoord : TEXCOORD0 ) : COLOR
{
    float fColorSum   = 0.000f;
    float fScale      = 0.002f;
    float fFinalColor = 0.000f;

    // Run through all taps in the Poisson Disc
    for( int i = 0; i &lt; 9; i++ )
    {
        // Compute tap coordinates
        float2 vTapCoord = vTexCoord + g_vFilterTaps[i] * fScale;

        // Accumulate color and contribution
        fColorSum += tex2D( FogTextureSampler, vTapCoord ).r;
    }

    // Return the accumulated color
    float fMaxIntensity = 0.25f;
    return fMaxIntensity * fColorSum;
}

</file>
 </files>
 <tool name="Compiler">
  <defines>
   <define name="EntryPoint_ShadowBlurPS" value="" />
  </defines>
  <arguments>
   <argument name="/Zi" value="true" />
   <argument name="/Vd" value="false" />
   <argument name="/Xu0_deprecated" value="false" />
   <argument name="/Odu_deprecated" value="false" />
   <argument name="/XOd_" value="false" />
   <argument name="/XOu" value="false" />
   <argument name="/Xmaxtempreg" value="0" />
   <argument name="PsSampBase" value="0" />
   <argument name="PsSampCount" value="0" />
   <argument name="VsSampBase" value="0" />
   <argument name="VsSampCount" value="0" />
   <argument name="VsInstCount" value="0" />
   <argument name="PsInstCount" value="0" />
   <argument name="/Od" value="false" />
   <argument name="/Zpr" value="false" />
   <argument name="/Zpc" value="false" />
   <argument name="/Gpp" value="false" />
   <argument name="/Op" value="false" />
   <argument name="/Gfa" value="false" />
   <argument name="/Gfp" value="false" />
   <argument name="/XZc:zeroInit" value="false" />
   <argument name="/XVe" value="false" />
   <argument name="/Xbe:3-" value="false" />
   <argument name="/Xbe:1-" value="false" />
   <argument name="/XQInomaskedexports" value="false" />
   <argument name="/XOautoz" value="false" />
  </arguments>
 </tool>
 <shaders>
  <shader entrypoint="ShadowBlurPS" target="ps_3_0" ZPass="0" pdbHint="4e4a0000-8c7c22db-9d7c20da">
   <constanttable>
    <constant register="s0">
     <type name="ShadowMapSampler" class="object" type="sampler2D" />
    </constant>
    <constant register="c0" count="12">
     <type name="g_vFilterTaps" class="vector" type="float" columns="4" elements="12" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="5" file="0" line="59" scope="-1" lastinstruction="0" />
    <statement pc="6" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="7" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="8" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="9" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="10" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="11" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="12" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="13" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="14" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="15" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="16" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="17" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="18" file="0" line="65" scope="-1" lastinstruction="0" />
    <statement pc="19" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="20" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="21" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="22" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="23" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="24" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="25" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="26" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="27" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="28" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="29" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="30" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="2.1" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="31" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="32" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="34" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="36" file="0" line="68" scope="-1" lastinstruction="0" />
    <statement pc="38" file="0" line="69" scope="-1" lastinstruction="0" />
    <statement pc="40" file="0" line="69" scope="-1" lastinstruction="0" />
    <statement pc="42" file="0" line="69" scope="-1" lastinstruction="0" />
    <statement pc="44" file="0" line="69" scope="-1" lastinstruction="0" />
    <statement pc="46" file="0" line="69" scope="-1" lastinstruction="0" />
    <statement pc="48" file="0" line="69" scope="-1" lastinstruction="0" />
    <statement pc="50" file="0" line="69" scope="-1" lastinstruction="0" />
    <statement pc="52" file="0" line="69" scope="-1" lastinstruction="0" />
    <statement pc="54" file="0" line="73" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="CompositeFilteredFogPS" retID="18">
     <parameter id="17" />
    </function>
    <function id="1" name="ShadowBlurPS" retID="11">
     <parameter id="10" />
    </function>
    <function id="2" name="OverlayMainVS" retID="8">
     <parameter id="6" />
     <parameter id="7" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xy" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="0.02" value1="1" value2="0.083333336" value3="0" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
 </shaders>
</shader-pdb>
