<?xml version="1.0" encoding="utf-8"?>
<shader-pdb pdbHint="4e4a0000-e6d89c71-737350fa" version="21119">
 <files>
  <file id="0" path="C:\Program Files (x86)\Microsoft Xbox 360 SDK\Source\Samples\Media\Shaders\VolumeFog.hlsl" time="01ccf361-58a76689">//--------------------------------------------------------------------------------------
// Vertex and Pixel shaders for Volume Fog
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
// Vertex shader constants 
//--------------------------------------------------------------------------------------
float4x4 matWorldViewProj : register(c0);
float3   vLocalLightPos   : register(c5);
float4   vMaterialColor   : register(c6);
float4   vAmbientColor    : register(c7);

float3   vLocalEyePos     : register(c5);
float2   ScaleAndOffset   : register(c6);


//--------------------------------------------------------------------------------------
// Pixel shader constants 
//--------------------------------------------------------------------------------------
float4 FogColorAndDensity : register(c0);


//--------------------------------------------------------------------------------------
// Name: SkyBoxVS()
// Desc: Unlit with a single textures.
//--------------------------------------------------------------------------------------
void SkyBoxVS( in  float4 vLocalPos  : POSITION,
               in  float3 vNormal    : NORMAL,
               in  float2 vTexCoord  : TEXCOORD0,
               out float4 oScreenPos : POSITION,
               out float2 oTexCoord  : TEXCOORD0,
               out float4 oColor     : COLOR )
{
    oScreenPos = mul( vLocalPos, matWorldViewProj );
    oTexCoord  = vTexCoord;
    oColor     = 1.0f;
}


//--------------------------------------------------------------------------------------
// Name: LitDiffuse1TexVS()
// Desc: Diffuse lighting with a single texture.
//       Isolate the computation of the position since it has to match the position from
//       the z-prepass.
//--------------------------------------------------------------------------------------
void LitDiffuse1TexVS( in  float4 vLocalPos  : POSITION,
                       in  float3 vNormal    : NORMAL,
                       in  float2 vTexCoord  : TEXCOORD0,
                       out float4 oScreenPos : POSITION,
                       out float2 oTexCoord  : TEXCOORD0,
                       out float4 oColor     : COLOR )
{
    [isolate] oScreenPos = mul( vLocalPos, matWorldViewProj );
    oTexCoord  = vTexCoord;
    oColor     = max( 0.0f, dot( vNormal, vLocalLightPos ) ) * vMaterialColor + vAmbientColor;
}


//--------------------------------------------------------------------------------------
// Name: DepthOutputVS()
// Desc: Output depth [0..1] in a texture coordinate.
//       Isolate the computation of the position since it has to match the position used
//       in the color pass.
//--------------------------------------------------------------------------------------
void DepthOutputVS( in  float4 vLocalPos  : POSITION,
                    in  float3 vNormal    : NORMAL,
                    in  float2 vTexCoord  : TEXCOORD0,
                    out float4 oScreenPos : POSITION,
                    out float2 oTexDepth  : TEXCOORD0 )
{
    [isolate] oScreenPos  = mul( vLocalPos, matWorldViewProj );
    oTexDepth.x = oScreenPos.w * ScaleAndOffset.x + ScaleAndOffset.y;
    oTexDepth.y = 0.0f;
}


//--------------------------------------------------------------------------------------
// Name: PassThruPosTexVS()
// Desc: Pass through position and textures.
//--------------------------------------------------------------------------------------
void PassThruPosTexVS( in  float4 vLocalPos  : POSITION,
                       in  float2 vTexCoord  : TEXCOORD0,
                       out float4 oScreenPos : POSITION,
                       out float2 oTexCoord  : TEXCOORD0 )
{
    oScreenPos = vLocalPos;
    oTexCoord  = vTexCoord;
}


//--------------------------------------------------------------------------------------
// Name: ComputeFogValuePS()
// Desc: Subtract the sum of the front faces from the sum of the back faces and
//       compute the final fog value.
//--------------------------------------------------------------------------------------
sampler2D SumTex : register(s0);

float4 ComputeFogValuePS( float2 vTexCoord : TEXCOORD0 ) : COLOR
{
    float2 Sums = tex2D( SumTex, vTexCoord );

    float4 Color;
    Color.rgb = FogColorAndDensity.rgb;
    Color.a   = (Sums.g - Sums.r) * FogColorAndDensity.a;
    
    return Color;
}


//--------------------------------------------------------------------------------------
// Name: DepthOutputPS()
// Desc: Output the depth value.
//--------------------------------------------------------------------------------------
sampler1D DepthEncodeTex : register(s0);

float4 DepthOutputPS( float2 vTexDepth : TEXCOORD0 ) : COLOR
{
    // Return the depth value.
    return vTexDepth.xxxx;
}


//--------------------------------------------------------------------------------------
// Name: DiffuseTexModulatePS()
// Desc: Modulate diffuse color with texture.
//--------------------------------------------------------------------------------------
sampler2D DiffuseTexture : register(s0);

float4 DiffuseTexModulatePS( float4 vColor    : COLOR0,
                             float2 vTexCoord : TEXCOORD0 ) : COLOR
{
    return vColor * tex2D( DiffuseTexture, vTexCoord );
}
</file>
 </files>
 <tool name="Compiler">
  <defines>
   <define name="EntryPoint_PassThruPosTexVS" value="" />
  </defines>
  <arguments>
   <argument name="/Zi" value="true" />
   <argument name="/Vd" value="false" />
   <argument name="/Xu0_deprecated" value="false" />
   <argument name="/Odu_deprecated" value="false" />
   <argument name="/XOd_" value="false" />
   <argument name="/XOu" value="false" />
   <argument name="/Xmaxtempreg" value="0" />
   <argument name="PsSampBase" value="0" />
   <argument name="PsSampCount" value="0" />
   <argument name="VsSampBase" value="0" />
   <argument name="VsSampCount" value="0" />
   <argument name="VsInstCount" value="0" />
   <argument name="PsInstCount" value="0" />
   <argument name="/Od" value="false" />
   <argument name="/Zpr" value="false" />
   <argument name="/Zpc" value="false" />
   <argument name="/Gpp" value="false" />
   <argument name="/Op" value="false" />
   <argument name="/Gfa" value="false" />
   <argument name="/Gfp" value="false" />
   <argument name="/XZc:zeroInit" value="false" />
   <argument name="/XVe" value="false" />
   <argument name="/Xbe:3-" value="false" />
   <argument name="/Xbe:1-" value="false" />
   <argument name="/XQInomaskedexports" value="false" />
   <argument name="/XOautoz" value="false" />
  </arguments>
 </tool>
 <shaders>
  <shader entrypoint="PassThruPosTexVS" target="vs_3_0" ZPass="0" pdbHint="4e4a0000-e6d89c71-737350fa">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="0" line="81" scope="-1" lastinstruction="0" />
    <statement pc="4" file="0" line="81" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="0" line="81" scope="-1" lastinstruction="0" />
    <statement pc="5" file="0" line="81" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="0" line="81" scope="-1" lastinstruction="0" />
    <statement pc="6" file="0" line="81" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="DiffuseTexModulatePS" retID="43">
     <parameter id="41" />
     <parameter id="42" />
    </function>
    <function id="1" name="DepthOutputPS" retID="39">
     <parameter id="38" />
    </function>
    <function id="2" name="ComputeFogValuePS" retID="34">
     <parameter id="33" />
    </function>
    <function id="3" name="PassThruPosTexVS" retID="31">
     <parameter id="27" />
     <parameter id="28" />
     <parameter id="29" />
     <parameter id="30" />
    </function>
    <function id="4" name="DepthOutputVS" retID="26">
     <parameter id="21" />
     <parameter id="22" />
     <parameter id="23" />
     <parameter id="24" />
     <parameter id="25" />
    </function>
    <function id="5" name="LitDiffuse1TexVS" retID="20">
     <parameter id="14" />
     <parameter id="15" />
     <parameter id="16" />
     <parameter id="17" />
     <parameter id="18" />
     <parameter id="19" />
    </function>
    <function id="6" name="SkyBoxVS" retID="13">
     <parameter id="7" />
     <parameter id="8" />
     <parameter id="9" />
     <parameter id="10" />
     <parameter id="11" />
     <parameter id="12" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="1" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xy__" Semantic="0x50" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xy" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
 </shaders>
</shader-pdb>
